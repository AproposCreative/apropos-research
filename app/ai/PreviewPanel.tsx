'use client';
import type { ArticleData } from '@/types/article';
import { useState } from 'react';

interface PreviewPanelProps {
  articleData: ArticleData;
  onUpdateArticle: (updates: Partial<ArticleData>) => void;
}

export default function PreviewPanel({ articleData, onUpdateArticle }: PreviewPanelProps) {
  const [isGeneratingImage, setIsGeneratingImage] = useState(false);
  const [imageProgress, setImageProgress] = useState(0);
  
  const renderStars = (rating: number) => {
    return '‚òÖ'.repeat(rating) + '‚òÜ'.repeat(5 - rating);
  };

  return (
    <div className="h-full bg-white overflow-y-auto">
      {/* Header */}
      <div className="p-4 border-b border-gray-200">
        <h2 className="text-black text-xl font-medium font-['Poppins']">
          Artikelpreview
        </h2>
        <p className="text-gray-600 text-sm mt-1">
          Live preview af din artikel
        </p>
      </div>

      {/* Article Preview */}
      <div className="p-6 max-w-4xl mx-auto">
        {/* Category Tag */}
        <div className="mb-4 flex justify-end">
          <span className="inline-block bg-black text-white text-xs px-3 py-1 rounded-full font-medium">
            {articleData.category || 'Serier & Film'}
          </span>
        </div>

        {/* Title */}
        <h1 className="text-4xl font-bold text-black mb-4 font-['Poppins'] leading-tight">
          {articleData.title || 'Alien: Earth'}
        </h1>

        {/* Subtitle */}
        <h2 className="text-xl text-gray-700 mb-6 font-['Poppins'] leading-relaxed">
          {articleData.subtitle || 'Alien er tilbage. Og du kommer til at holde vejret hele vejen.'}
        </h2>

         {/* Meta Info */}
         <div className="flex items-center gap-4 mb-8 text-sm text-gray-600">
           <span className="font-medium">{articleData.author || 'Casper Fiil'}</span>
           <span>|</span>
           <span>Anmeldelser</span>
           <span>|</span>
           <span>TV-serier</span>
           <span className="text-yellow-500">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
           <span>|</span>
           <span className="bg-gray-100 px-2 py-1 rounded text-xs">Disney+</span>
           <span className="bg-blue-600 text-white px-2 py-1 rounded text-xs">Stream nu</span>
           <span className="bg-gray-100 px-2 py-1 rounded text-xs">Billetter</span>
         </div>

        {/* Featured Image */}
        {articleData.featuredImage ? (
          <div className="space-y-4">
            <div className="w-full h-64 rounded-lg overflow-hidden border border-gray-200 relative group">
              <img 
                src={articleData.featuredImage} 
                alt={articleData.title || 'Artikel billede'}
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex items-center justify-center">
                <button
                  onClick={async () => {
                    if (isGeneratingImage) return;
                    setIsGeneratingImage(true);
                    setImageProgress(0);
                    
                    try {
                      console.log('üé® Generating new image for article:', articleData.title);
                      
                      // Simulate progress steps
                      const progressSteps = [
                        { step: 'Forbereder prompt...', progress: 20 },
                        { step: 'Genererer billede...', progress: 60 },
                        { step: 'Behandler billede...', progress: 90 },
                        { step: 'F√¶rdig!', progress: 100 }
                      ];
                      
                      let currentStep = 0;
                      const progressInterval = setInterval(() => {
                        if (currentStep < progressSteps.length) {
                          setImageProgress(progressSteps[currentStep].progress);
                          currentStep++;
                        }
                      }, 800);
                      
                      // Extract topic from tags or use category
                      const topic = (articleData.tags && articleData.tags.length > 0) 
                        ? articleData.tags[0] 
                        : articleData.category || 'Generel';
                      
                      const requestData = {
                        title: articleData.title || 'Artikel',
                        topic: topic,
                        author: articleData.author || 'Redaktionen',
                        category: articleData.category || 'Kultur',
                        content: articleData.content || ''
                      };
                      
                      console.log('üé® Request data:', requestData);
                      
                      const response = await fetch('/api/generate-image', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(requestData)
                      });
                      
                      clearInterval(progressInterval);
                      setImageProgress(100);
                      
                      console.log('üé® Response status:', response.status);
                      
                      if (response.ok) {
                        const data = await response.json();
                        console.log('üé® Response data:', data);
                        
                        if (data.success && data.imageUrl) {
                          console.log('‚úÖ New image generated successfully, updating article data');
                          onUpdateArticle({ featuredImage: data.imageUrl });
                        } else {
                          console.error('‚ùå Image generation failed:', data.error);
                          alert('Billedgenerering fejlede: ' + (data.error || 'Ukendt fejl'));
                        }
                      } else {
                        const errorData = await response.json().catch(() => ({}));
                        console.error('‚ùå API error:', response.status, errorData);
                        alert('Billedgenerering fejlede: ' + (errorData.error || 'Server fejl'));
                      }
                    } catch (error) {
                      console.error('‚ùå Error generating new image:', error);
                      alert('Billedgenerering fejlede: ' + error.message);
                    } finally {
                      setIsGeneratingImage(false);
                      setTimeout(() => setImageProgress(0), 1000);
                    }
                  }}
                  disabled={isGeneratingImage}
                  className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 flex items-center gap-2 ${
                    isGeneratingImage 
                      ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg shadow-blue-500/50 animate-pulse' 
                      : 'bg-white/90 text-black hover:bg-white'
                  }`}
                >
                  {isGeneratingImage && (
                    <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-600/20 animate-pulse"></div>
                  )}
                  <span className="relative z-10">{isGeneratingImage ? '‚è≥' : 'üé®'}</span>
                  <span className="relative z-10">
                    {isGeneratingImage ? `Genererer... ${imageProgress}%` : 'Generer nyt billede'}
                  </span>
                  {isGeneratingImage && (
                    <div className="absolute bottom-0 left-0 h-1 bg-white/30 w-full">
                      <div 
                        className="h-full bg-gradient-to-r from-blue-400 to-purple-500 transition-all duration-300 ease-out"
                        style={{ width: `${imageProgress}%` }}
                      ></div>
                    </div>
                  )}
                </button>
              </div>
            </div>
            
            {/* Visible Generate New Image Button */}
            <div className="text-center">
              <button
                onClick={async () => {
                  if (isGeneratingImage) return;
                  setIsGeneratingImage(true);
                  setImageProgress(0);
                  
                  try {
                    console.log('üé® Generating new image for article:', articleData.title);
                    
                    // Simulate progress steps
                    const progressSteps = [
                      { step: 'Forbereder prompt...', progress: 20 },
                      { step: 'Genererer billede...', progress: 60 },
                      { step: 'Behandler billede...', progress: 90 },
                      { step: 'F√¶rdig!', progress: 100 }
                    ];
                    
                    let currentStep = 0;
                    const progressInterval = setInterval(() => {
                      if (currentStep < progressSteps.length) {
                        setImageProgress(progressSteps[currentStep].progress);
                        currentStep++;
                      }
                    }, 800);
                    
                    // Extract topic from tags or use category
                    const topic = (articleData.tags && articleData.tags.length > 0) 
                      ? articleData.tags[0] 
                      : articleData.category || 'Generel';
                    
                    const requestData = {
                      title: articleData.title || 'Artikel',
                      topic: topic,
                      author: articleData.author || 'Redaktionen',
                      category: articleData.category || 'Kultur',
                      content: articleData.content || ''
                    };
                    
                    console.log('üé® Request data:', requestData);
                    
                    const response = await fetch('/api/generate-image', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify(requestData)
                    });
                    
                    clearInterval(progressInterval);
                    setImageProgress(100);
                    
                    console.log('üé® Response status:', response.status);
                    
                    if (response.ok) {
                      const data = await response.json();
                      console.log('üé® Response data:', data);
                      
                      if (data.success && data.imageUrl) {
                        console.log('‚úÖ New image generated successfully, updating article data');
                        onUpdateArticle({ featuredImage: data.imageUrl });
                      } else {
                        console.error('‚ùå Image generation failed:', data.error);
                        alert('Billedgenerering fejlede: ' + (data.error || 'Ukendt fejl'));
                      }
                    } else {
                      const errorData = await response.json().catch(() => ({}));
                      console.error('‚ùå API error:', response.status, errorData);
                      alert('Billedgenerering fejlede: ' + (errorData.error || 'Server fejl'));
                    }
                  } catch (error) {
                    console.error('‚ùå Error generating new image:', error);
                    alert('Billedgenerering fejlede: ' + error.message);
                  } finally {
                    setIsGeneratingImage(false);
                    setTimeout(() => setImageProgress(0), 1000);
                  }
                }}
                disabled={isGeneratingImage}
                className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 flex items-center gap-2 mx-auto relative overflow-hidden ${
                  isGeneratingImage 
                    ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg shadow-blue-500/50 animate-pulse' 
                    : 'bg-blue-600 text-white hover:bg-blue-700'
                }`}
              >
                {isGeneratingImage && (
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-600/20 animate-pulse"></div>
                )}
                <span className="relative z-10">{isGeneratingImage ? '‚è≥' : 'üé®'}</span>
                <span className="relative z-10">
                  {isGeneratingImage ? `Genererer... ${imageProgress}%` : 'Generer nyt billede'}
                </span>
                {isGeneratingImage && (
                  <div className="absolute bottom-0 left-0 h-1 bg-white/30 w-full">
                    <div 
                      className="h-full bg-gradient-to-r from-blue-400 to-purple-500 transition-all duration-300 ease-out"
                      style={{ width: `${imageProgress}%` }}
                    ></div>
                  </div>
                )}
              </button>
            </div>
          </div>
        ) : (
          <div className="w-full h-64 bg-gradient-to-br from-gray-200 to-gray-300 rounded-lg mb-4 flex items-center justify-center">
            <div className="text-center text-gray-500">
              <div className="text-4xl mb-2">üì∑</div>
              <p className="text-sm">Featured image</p>
            </div>
          </div>
        )}

        {/* Generate Image Button */}
        {!articleData.featuredImage && (
          <div className="mb-8 text-center">
            <button
              onClick={async () => {
                if (isGeneratingImage) return;
                setIsGeneratingImage(true);
                setImageProgress(0);
                
                try {
                  console.log('üé® Generating image for article:', articleData.title);
                  
                  // Simulate progress steps
                  const progressSteps = [
                    { step: 'Forbereder prompt...', progress: 20 },
                    { step: 'Genererer billede...', progress: 60 },
                    { step: 'Behandler billede...', progress: 90 },
                    { step: 'F√¶rdig!', progress: 100 }
                  ];
                  
                  let currentStep = 0;
                  const progressInterval = setInterval(() => {
                    if (currentStep < progressSteps.length) {
                      setImageProgress(progressSteps[currentStep].progress);
                      currentStep++;
                    }
                  }, 800);
                  
                  // Extract topic from tags or use category
                  const topic = (articleData.tags && articleData.tags.length > 0) 
                    ? articleData.tags[0] 
                    : articleData.category || 'Generel';
                  
                  const requestData = {
                    title: articleData.title || 'Artikel',
                    topic: topic,
                    author: articleData.author || 'Redaktionen',
                    category: articleData.category || 'Kultur',
                    content: articleData.content || ''
                  };
                  
                  console.log('üé® Request data:', requestData);
                  
                  const response = await fetch('/api/generate-image', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(requestData)
                  });
                  
                  clearInterval(progressInterval);
                  setImageProgress(100);
                  
                  console.log('üé® Response status:', response.status);
                  
                  if (response.ok) {
                    const data = await response.json();
                    console.log('üé® Response data:', data);
                    
                    if (data.success && data.imageUrl) {
                      console.log('‚úÖ Image generated successfully, updating article data');
                      onUpdateArticle({ featuredImage: data.imageUrl });
                    } else {
                      console.error('‚ùå Image generation failed:', data.error);
                      alert('Billedgenerering fejlede: ' + (data.error || 'Ukendt fejl'));
                    }
                  } else {
                    const errorData = await response.json().catch(() => ({}));
                    console.error('‚ùå API error:', response.status, errorData);
                    alert('Billedgenerering fejlede: ' + (errorData.error || 'Server fejl'));
                  }
                } catch (error) {
                  console.error('‚ùå Error generating image:', error);
                  alert('Billedgenerering fejlede: ' + error.message);
                } finally {
                  setIsGeneratingImage(false);
                  setTimeout(() => setImageProgress(0), 1000);
                }
              }}
              disabled={isGeneratingImage}
              className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 flex items-center gap-2 mx-auto relative overflow-hidden ${
                isGeneratingImage 
                  ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg shadow-blue-500/50 animate-pulse' 
                  : 'bg-blue-600 text-white hover:bg-blue-700'
              }`}
            >
              {isGeneratingImage && (
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-600/20 animate-pulse"></div>
              )}
              <span className="relative z-10">{isGeneratingImage ? '‚è≥' : 'üé®'}</span>
              <span className="relative z-10">
                {isGeneratingImage ? `Genererer... ${imageProgress}%` : 'Generer artikel billede'}
              </span>
              {isGeneratingImage && (
                <div className="absolute bottom-0 left-0 h-1 bg-white/30 w-full">
                  <div 
                    className="h-full bg-gradient-to-r from-blue-400 to-purple-500 transition-all duration-300 ease-out"
                    style={{ width: `${imageProgress}%` }}
                  ></div>
                </div>
              )}
            </button>
          </div>
        )}

        {/* Article Content */}
        <div className="prose prose-lg max-w-none">
          <div className="text-gray-500 text-sm mb-4">
            L√¶ser nu: {articleData.title || 'Alien: Earth'}
          </div>
          
           {articleData.content ? (
             <div className="whitespace-pre-wrap text-gray-900 leading-relaxed">
               {articleData.content}
             </div>
           ) : (
             <div className="text-gray-900 leading-relaxed">
               <p className="mb-4">
                 Jeg ville egentlig have afskrevet hele Alien-franchisen for l√¶ngst. Det er sv√¶rt ikke at miste troen, n√•r noget, man elsker, bliver pillet ved igen og igen, som et gammelt s√•r, der aldrig f√•r ro. Men Alien: Earth g√∏r noget, jeg ikke troede muligt: Den f√•r mig til at tro p√• det m√∏rke igen.
               </p>
               
               {/* Star Rating */}
               <div className="mb-6 flex items-center gap-2">
                 <span className="text-sm text-gray-600">En stjerne</span>
                 <span className="text-sm text-gray-600">To stjerner</span>
                 <span className="text-sm text-gray-600">Tre stjerner</span>
                 <span className="text-sm text-gray-600">Fire stjerner</span>
                 <span className="text-sm text-gray-600">Fem stjerner</span>
                 <span className="text-sm text-gray-600">Seks stjerner</span>
               </div>
               
               <p className="mb-4">
                 Alien-universet er en af de f√• filmfranchises, hvor selv de d√•rlige kapitler har bid. Ridley Scotts original fra 1979 var isnende, banebrydende, uafrystelig. James Camerons opf√∏lger i '86 var m√•ske mindre subtil, men effektiv p√• sin egen, h√∏joktane m√•de. Derefter begyndte det at smuldre. <em>Alien 3</em> var David Finchers vision, der blev kvalt i studieindblanding. <em>Resurrection</em> var‚Ä¶ noget med kloner og franske kamerabev√¶gelser. Og s√• kom <em>Alien vs. Predator</em>, og det var som at se nogen bruge ens barndomsminder som bordsk√•nere.
               </p>
               
               <p className="mb-4">
                 Senere fik vi <em>Prometheus</em> og <em>Covenant</em>. Ambiti√∏se, men splittende. Personligt synes jeg, <em>Prometheus</em> var smuk sci-fi med identitetsproblemer. Den pr√∏vede at v√¶re b√•de filosofisk og gory ‚Äì og blev lidt forvirret undervejs. Men den pr√∏vede i det mindste noget. Det samme g√¶lder <em>Covenant</em>. Og nu har vi <em>Alien: Earth</em> ‚Äì et nyt fors√∏g i serieformat. Den st√∏rste overraskelse er m√•ske, at det faktisk fungerer.
               </p>
               
               <p className="mb-4">
                 Fra f√∏rste afsnit m√¶rker man det: Der er t√¶nkt over det her. Stemningen er t√¶t, m√∏rk og fuld af den gamle paranoia. Det f√∏les som Alien, ikke bare som noget, der vil ligne Alien. Serien t√∏r v√¶re langsom. Den t√∏r lade stilheden tale. Og vigtigst af alt: Den t√∏r tage sig selv alvorligt uden at blive selvh√∏jtidelig.
               </p>
               
               <p className="mb-4">
                 Man m√¶rker hurtigt, at vi er tilbage i et univers, hvor der er konsekvenser. Hvor d√∏den ikke er en billig plot-enhed, men en reel risiko. Serien balancerer mellem det snigende og det eksplosive. Den v√¶lger det f√∏rste oftest, og det kl√¶der den. Det handler ikke om jump-scares eller blodspr√∏jt ‚Äì det handler om at sidde med en knude i maven og vente p√•, at noget bev√¶ger sig i m√∏rket.
               </p>
               
               <p className="mb-4">
                 Men tempoet kan ogs√• give udfordringer. Enkelte episoder f√∏les som om de opbygger uden at forl√∏se. Som om man hele tiden st√•r lige p√• kanten af afgrunden ‚Äì uden at blive skubbet. Det kan v√¶re frustrerende, is√¶r n√•r man som seer forventer payoff. Der mangler nogle gange det sidste tryk, den der fornemmelse af, at skruen drejes lige √©n omgang mere. Serien v√¶lger i stedet at lade frygten ulme. Det fungerer oftest. Men ikke altid.
               </p>
               
               <p className="mb-4">
                 Der er dog et klart h√∏jdepunkt: Afsnittet "In space, no one‚Ä¶" ‚Äì et afsnit, der i sig selv retf√¶rdigg√∏r hele serien. Det kondenserer alt, hvad der g√∏r Alien-universet s√¶rligt: klaustrofobien, lydene, m√∏rket, stilheden. Der er n√¶sten noget poetisk over det. Her bliver serien mere end bare et genoplivningsfors√∏g ‚Äì den bliver et statement. Det er det bedste, vi har f√•et fra franchisen siden <em>Aliens</em>. Ingen tvivl.
               </p>
               
               <p className="mb-4">
                 Skuespillet er en af seriens st√∏rste styrker. Timothy Olyphant er som skabt til roller med autoritet, og han bruger sin tilstedev√¶relse klogt. Han overspiller aldrig. Han lader blikket og pauserne g√∏re arbejdet. Babou Ceesay er en af de mest undervurderede skuespillere i √∏jeblikket, og her f√•r han endelig plads. Han balancerer rationel handlekraft med emotionel dybde p√• en m√•de, der giver hans karakter en sj√¶lden trov√¶rdighed.
               </p>
               
               <p className="mb-4">
                 Og s√• er der Sydney Chandler. Jeg vidste ikke, hvem hun var, f√∏r jeg s√• denne serie, men hun er seriens puls. Der er en energi og en nerve i hendes spil, der g√∏r hende umulig at ignorere. Hun er ikke bare "den unge", hun er katalysator for store f√∏lelser ‚Äì frygt, vrede, omsorg ‚Äì alt sammen med f√• midler. Serien ville v√¶re fattigere uden hende.
               </p>
               
               <p className="mb-4">
                 Noget andet, der virkelig fungerer, er brugen af effekter ‚Äì eller rettere: den m√•de de <strong>ikke</strong> bruges p√•. Vi er vant til, at sci-fi i dag betyder CGI-overload og spektakel for spektaklets skyld. <em>Alien: Earth</em> g√•r den modsatte vej. Her bruges CGI med omtanke. Det er praktisk, grimt og √¶gte. Lyset flimrer. V√¶ggene er fugtige. Man m√¶rker stedet. Og Xenomorphen? Den er tilbage som den skal v√¶re: skr√¶mmende, uforudsigelig og bedst, n√•r man n√¶sten ikke ser den.
               </p>
               
               <p className="mb-4">
                 Det f√∏les som om serien har forst√•et √©n vigtig ting: Det, vi ikke ser, er ofte det mest skr√¶mmende. Og det er her, den vinder sin respekt. Den insisterer p√•, at gyset ikke handler om chok ‚Äì men om atmosf√¶re.
               </p>
               
               <p className="mb-4">
                 Hvis der er en reel kritik, udover tempoet, s√• er det, at <em>Alien: Earth</em> f√∏les som begyndelsen p√• noget st√∏rre. Det er ikke n√∏dvendigvis en d√•rlig ting, men det efterlader os med en fornemmelse af, at vi kun har set f√∏rste akt. Serien holder igen ‚Äì og det g√∏r den m√•ske lidt for meget. Vi sidder tilbage og venter p√• s√¶son 2 for at f√• svar. Det er frustrerende. For n√•r det er s√• godt, vil man have mere. Nu.
               </p>
               
               <p className="mb-4">
                 Men det √¶ndrer ikke p√• helhedsindtrykket. <em>Alien: Earth</em> er √•rets st√∏rste sci-fi-overraskelse. Den f√∏les som et k√¶rligt, men kompromisl√∏st gensyn med et univers, mange havde opgivet. Den t√∏r v√¶re tro mod originalmaterialet, samtidig med at den introducerer nye perspektiver. Den balancerer det gamle og det nye ‚Äì uden at please nogen un√∏digt. Og det er m√•ske det bedste, man kan sige om den.
               </p>
               
               <p className="mb-4 font-medium">
                 <strong>Lad os bare sige det s√•dan her:</strong>
               </p>
               
               <p className="mb-4">
                 Det her er ikke bare endnu en streaming-serie. Det er en seri√∏s genreproduktion, der ved, hvad den vil ‚Äì og t√∏r holde fast i det. Hvis resten af serien f√∏lger samme kurs, har vi m√•ske endelig f√•et et nyt kapitel i Alien-historien, der kan m√•le sig med de gamle. En sj√¶ldenhed i en franchise, der ellers har v√¶ret mere d√∏d end levende.
               </p>
               
               <div className="mt-8 pt-4 border-t border-gray-200">
                 <p className="font-medium">{articleData.author || 'Casper Fiil'}</p>
                 <p className="text-sm text-gray-600">Anmelder & skribent</p>
               </div>
               
               <div className="mt-4 p-3 bg-gray-50 rounded text-sm">
                 <p><strong>Disclaimer:</strong> Apropos Magazine deltog i arrangementet med presseakkreditering fra arrang√∏ren.</p>
               </div>
             </div>
           )}

          {/* Rating */}
          {articleData.rating && articleData.rating > 0 && (
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <p className="text-lg font-medium mb-2">Bed√∏mmelse</p>
              <p className="text-2xl text-yellow-500">
                {renderStars(articleData.rating)}
              </p>
            </div>
          )}
        </div>

         {/* Related Articles */}
         <div className="mt-12 pt-8 border-t border-gray-200">
           <h3 className="text-lg font-semibold mb-6">Relaterede artikler</h3>
           <div className="space-y-4">
             <div className="flex items-start gap-4">
               <div className="w-20 h-12 bg-gray-200 rounded flex-shrink-0"></div>
               <div>
                 <p className="font-medium text-sm">Untamed (Netflix)</p>
                 <p className="text-xs text-gray-600">TV-serier ‚Ä¢ Casper Fiil</p>
               </div>
             </div>
             <div className="flex items-start gap-4">
               <div className="w-20 h-12 bg-gray-200 rounded flex-shrink-0"></div>
               <div>
                 <p className="font-medium text-sm">The Bear - Season 4</p>
                 <p className="text-xs text-gray-600">Anmeldelser ‚Ä¢ Casper Fiil</p>
               </div>
             </div>
             <div className="flex items-start gap-4">
               <div className="w-20 h-12 bg-gray-200 rounded flex-shrink-0"></div>
               <div>
                 <p className="font-medium text-sm">28 Years Later: Zombie-trilogiens ambiti√∏se, filosofiske finale</p>
                 <p className="text-xs text-gray-600">Anmeldelser ‚Ä¢ Eva Linde</p>
               </div>
             </div>
             <div className="flex items-start gap-4">
               <div className="w-20 h-12 bg-gray-200 rounded flex-shrink-0"></div>
               <div>
                 <p className="font-medium text-sm">Du s√• How to Train Your Dragon i IMAX og m√¶rkede vinden under vingerne</p>
                 <p className="text-xs text-gray-600">Film ‚Ä¢ Peter Milo</p>
               </div>
             </div>
           </div>
           <div className="mt-6">
             <button className="text-blue-600 text-sm hover:underline">
               Se flere
             </button>
           </div>
         </div>

         {/* Tags */}
         {articleData.tags.length > 0 && (
           <div className="mt-8 pt-6 border-t border-gray-200">
             <div className="flex flex-wrap gap-2">
               {articleData.tags.map((tag, index) => (
                 <span
                   key={index}
                   className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm"
                 >
                   #{tag}
                 </span>
               ))}
             </div>
           </div>
         )}
      </div>

      {/* Quick Edit Panel */}
      <div className="fixed bottom-4 right-4 bg-white border border-gray-200 rounded-lg p-4 shadow-lg max-w-sm">
        <h3 className="font-medium mb-3">Quick Edit</h3>
        <div className="space-y-3">
          <div>
            <label className="block text-xs text-gray-600 mb-1">Titel</label>
            <input
              type="text"
              value={articleData.title}
              onChange={(e) => onUpdateArticle({ title: e.target.value })}
              className="w-full p-2 border border-gray-300 rounded text-sm"
              placeholder="Artikel titel..."
            />
          </div>
          <div>
            <label className="block text-xs text-gray-600 mb-1">Undertitel</label>
            <input
              type="text"
              value={articleData.subtitle}
              onChange={(e) => onUpdateArticle({ subtitle: e.target.value })}
              className="w-full p-2 border border-gray-300 rounded text-sm"
              placeholder="Artikel undertitel..."
            />
          </div>
          <div>
            <label className="block text-xs text-gray-600 mb-1">Kategori</label>
            <select
              value={articleData.category}
              onChange={(e) => onUpdateArticle({ category: e.target.value })}
              className="w-full p-2 border border-gray-300 rounded text-sm"
            >
              <option value="">V√¶lg kategori...</option>
              <option value="Gaming">Gaming</option>
              <option value="Film">Film</option>
              <option value="Serier">Serier</option>
              <option value="Musik">Musik</option>
              <option value="Kultur">Kultur</option>
              <option value="Nyheder">Nyheder</option>
            </select>
          </div>
          <div>
            <label className="block text-xs text-gray-600 mb-1">Rating</label>
            <select
              value={articleData.rating || 0}
              onChange={(e) => onUpdateArticle({ rating: parseInt(e.target.value) })}
              className="w-full p-2 border border-gray-300 rounded text-sm"
            >
              <option value={0}>Ingen rating</option>
              <option value={1}>‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ</option>
              <option value={2}>‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ</option>
              <option value={3}>‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ</option>
              <option value={4}>‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ</option>
              <option value={5}>‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</option>
            </select>
          </div>
        </div>
      </div>
    </div>
  );
}
