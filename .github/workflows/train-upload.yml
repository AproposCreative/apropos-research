name: Train and Upload Embeddings

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC

jobs:
  train-upload:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      FIREBASE_ADMIN_PROJECT_ID: ${{ secrets.FIREBASE_ADMIN_PROJECT_ID }}
      FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
      FIREBASE_ADMIN_PRIVATE_KEY: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}
      FIREBASE_ADMIN_TOKEN_URI: https://oauth2.googleapis.com/token
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Debug environment
        run: |
          chmod +x scripts/debug-env.sh
          ./scripts/debug-env.sh

      - name: Verify environment variables
        run: |
          echo "Checking environment variables..."
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "‚ùå OPENAI_API_KEY is missing"
            exit 1
          fi
          if [ -z "$FIREBASE_ADMIN_PROJECT_ID" ]; then
            echo "‚ùå FIREBASE_ADMIN_PROJECT_ID is missing"
            exit 1
          fi
          if [ -z "$FIREBASE_ADMIN_CLIENT_EMAIL" ]; then
            echo "‚ùå FIREBASE_ADMIN_CLIENT_EMAIL is missing"
            exit 1
          fi
          if [ -z "$FIREBASE_ADMIN_PRIVATE_KEY" ]; then
            echo "‚ùå FIREBASE_ADMIN_PRIVATE_KEY is missing"
            exit 1
          fi
          echo "‚úÖ All required environment variables are set"

      - name: Train embeddings
        run: |
          echo "üöÄ Starting embeddings training..."
          npx tsx scripts/train-embeddings-clean.ts

      - name: Upload embeddings to Firebase Storage
        run: |
          echo "üì§ Uploading embeddings to Firebase Storage..."
          npx tsx scripts/upload-to-storage.ts data/articles-embeddings.json apropos-config/embeddings/articles-embeddings.json

      - name: Upload prompt to Firebase Storage
        run: |
          echo "üì§ Uploading prompt to Firebase Storage..."
          npx tsx scripts/upload-to-storage.ts prompts/apropos_writer.prompt apropos-config/prompts/apropos_writer.prompt


